/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica1;

import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Luis
 */
public class Ventana extends javax.swing.JFrame {
     public int variaAviones;
     public int variaEscritorios;
     public int auxiliarAv=0;
     public int variaPasajeros;
     public int auxiliarPa=0;
     public int variaMaletas;
     public int auxiliarMa=0;
     public int variaEstaciones;
     public int auxiliarEs=1;
     public int auxiliarEsa=0;
     public int auxiliarEsc=1;
     public int auxTipo;
     public String aTipo;
     public int auxPasajeros;
     public int auxDesabordaje;
     public int auxMantenimiento;
     public int auxMaletas;
     public int auxDocumentos;
     public int iteracionesMantenimineto=0;
     public int[] contadorMaletas=new int[500];
     public int contaPaMa=0;
     public int cicloMaletas;
     public int sumandoMaletas=4;
     public int eliminadorMaletas=0;
     public int Turno=2;
     public int auxTurnoRegistro;
     public int crearEscritorios=0;
     public int paBorra=0;
     ListaAviones listaA=new ListaAviones();
     ListaPasajeros listaP=new ListaPasajeros();
     ListaEquipaje listaE=new ListaEquipaje();
     ListaMantenimiento listaM=new ListaMantenimiento();
     ListaMantenimiento listaC=new ListaMantenimiento();
     ListaEscritorios listaEs=new ListaEscritorios();
     File miArchivo;
     PrintWriter escribir;
     File miArchivo2;
     PrintWriter escribir2;
     File pasajero;
     PrintWriter escribirP;
     File pasajeros;
     PrintWriter escribirPs;
     File maleta;
     PrintWriter escribirM;
     File maletas;
     PrintWriter escribirMs;
     File escritorio;
     PrintWriter escribirE;
     File escritorios;
     PrintWriter escribirEs;
     File mantenimiento;
     PrintWriter escribirMa;
     File mantenimientos;
     PrintWriter escribirMas;
     File cola;
     PrintWriter escribirC;
     
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cantidadAviones = new javax.swing.JTextField();
        cantidadEstaciones = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        empezar = new javax.swing.JButton();
        pasarT = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cantidadEscritorios = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Cantidad Aviones");

        jLabel2.setText("Cantidad Estaciones");

        area.setBackground(new java.awt.Color(0, 0, 0));
        area.setColumns(20);
        area.setForeground(new java.awt.Color(255, 255, 255));
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                .addContainerGap())
        );

        empezar.setText("Empezar");
        empezar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empezarActionPerformed(evt);
            }
        });

        pasarT.setText("Pasar Turno");
        pasarT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasarTActionPerformed(evt);
            }
        });

        jLabel3.setText("Cantidad Escritorios");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(empezar)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(pasarT))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cantidadEscritorios, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cantidadAviones, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                        .addComponent(cantidadEstaciones))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addGap(66, 66, 66)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cantidadAviones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cantidadEstaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cantidadEscritorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(empezar)
                            .addComponent(pasarT)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void empezarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empezarActionPerformed
        variaAviones=Integer.parseInt(cantidadAviones.getText());
        variaEstaciones=Integer.parseInt(cantidadEstaciones.getText());
        variaEscritorios=Integer.parseInt(cantidadEscritorios.getText());
        listaM.setNumNodos(variaEstaciones);
        listaEs.setNumNodosEscritorios(variaEscritorios);
        miArchivo=new File("Avion.dot");
        pasajero=new File("pasajero.dot");
        maleta=new File("maleta.dot"); 
        escritorio=new File("escritorio.dot");
        mantenimiento=new File("mantenimiento.dot");
        while(auxiliarAv<1){
            auxiliarAv++;
            auxTipo=generaNumAleatorio(1,3);
            if (auxTipo==1) {
                aTipo="Pequeño";
                auxPasajeros=generaNumAleatorio(5,10);
                auxDesabordaje=1;
                auxMantenimiento=generaNumAleatorio(1,3);
            }
            if (auxTipo  ==2) {
                aTipo="Mediano";
                auxPasajeros=generaNumAleatorio(15,25);
                auxDesabordaje=2;
                auxMantenimiento=generaNumAleatorio(2,4);
            }
            if (auxTipo==3) {
                aTipo="Grande";
                auxPasajeros=generaNumAleatorio(30,40);
                auxDesabordaje=3;
                auxMantenimiento=generaNumAleatorio(3,6);
            }
            variaPasajeros=variaPasajeros+auxPasajeros;
            Avion avion=new Avion(aTipo,auxPasajeros,auxDesabordaje,auxMantenimiento);
            listaA.insertarAlFinal(avion);
            
            
        }
        
        while(auxiliarPa<variaPasajeros){
            auxiliarPa++;
            auxMaletas=generaNumAleatorio(1,4);
            auxDocumentos=generaNumAleatorio(1,10);
            auxTurnoRegistro=generaNumAleatorio(1,3);
            variaMaletas=variaMaletas+auxMaletas;
            contadorMaletas[contaPaMa]=variaMaletas;
            contaPaMa++;
            Pasajero pasajero=new Pasajero(auxMaletas,auxDocumentos,auxTurnoRegistro);
            listaP.insertarAlFinal(pasajero);
        }
        while(auxiliarMa<variaMaletas){
            auxiliarMa++;
            Maleta maleta=new Maleta();
            listaE.insertarAlFrente(maleta);
        }
        String esta="";
        while(auxiliarEs<=variaEstaciones){
            esta=esta+"Estacion"+auxiliarEs+"\n Estado: Libre \n";
            auxiliarEs++;
        }
        String estaG="digraph C {\n";
        while(auxiliarEsa<variaEstaciones){
            estaG=estaG+"nodo"+auxiliarEsa+"[label=\"ESTACION "+(auxiliarEsa+1)+" LIBRE\"];\n";
            if (auxiliarEsa+1!=variaEstaciones) {
                estaG=estaG+"nodo"+auxiliarEsa+"->nodo"+(auxiliarEsa+1)+"\n";
            }
            auxiliarEsa++;
        }
        estaG=estaG+"}";
        String esta1="";
        int escri=65;
        char va;
        while(auxiliarEsc<=variaEscritorios){
            va=(char)escri;
            esta1=esta1+"Escritorio"+va+"\n Estado: Libre \n";
            auxiliarEsc++;
            escri++;
        }
        while(crearEscritorios<=variaEscritorios){
              listaEs.insertarAlFinal();
              crearEscritorios++;
          }
        area.setText("++++++++++++ TURNO 1 ++++++++++++ \n"+
                "++++++++++++ AVIONES ++++++++++++ \n"+
                ""+listaA.imprimir()+"++++++++++++ ESCRITORIOS ++++++++++++ \n"+esta1+"++++++++++++ PASAJEROS ++++++++++++ \n"+""+listaP.imprimirs()
                +"++++++++++++ MALETAS ++++++++++++ \n"+listaE.imprimir()
                +"++++++++++++ ESTACIONES ++++++++++++ \n"+esta+"++++++++++ FIN TURNO 1 ++++++++++");
         System.out.println(estaG);
        if (!miArchivo.exists()) {
            try{
                miArchivo.createNewFile();
            }catch(Exception e){
                
            }
        }
        if(miArchivo.exists()){
            try{
            escribir=new PrintWriter(miArchivo,"utf-8");
            escribir.println(listaA.imprimirG());
            escribir.close();
            
            }catch(Exception e){
                
            }
        }
        GraphvizJava a=new GraphvizJava("avion.dot","avion.png");
        if (!pasajero.exists()) {
            try{
                pasajero.createNewFile();
            }catch(Exception e){
                
            }
        }
        if(pasajero.exists()){
            try{
            escribirP=new PrintWriter(pasajero,"utf-8");
            escribirP.println(listaP.imprimirsG());
            escribirP.close();
            
            }catch(Exception e){
                
            }
        }
        GraphvizJava b=new GraphvizJava("pasajero.dot","pasajero.png");
        if (!maleta.exists()) {
            try{
                maleta.createNewFile();
            }catch(Exception e){
                
            }
        }
        if(maleta.exists()){
            try{
            escribirM=new PrintWriter(maleta,"utf-8");
            escribirM.println(listaE.imprimirG());
            escribirM.close();
            
            }catch(Exception e){
                
            }
        }
        GraphvizJava c=new GraphvizJava("maleta.dot","maleta.png");
        if (!escritorio.exists()) {
            try{
                escritorio.createNewFile();
            }catch(Exception e){
                
            }
        }
        if(escritorio.exists()){
            try{
            escribirE=new PrintWriter(escritorio,"utf-8");
            escribirE.println(listaEs.imprimirS());
            escribirE.close();
            
            }catch(Exception e){
                
            }
        }
        GraphvizJava f=new GraphvizJava("escritorio.dot","escritorio.png");
        if (!mantenimiento.exists()) {
            try{
                mantenimiento.createNewFile();
            }catch(Exception e){
                
            }
        }
        if(mantenimiento.exists()){
            try{
            escribirMa=new PrintWriter(mantenimiento,"utf-8");
            escribirMa.println(estaG);
            escribirMa.close();
            
            }catch(Exception e){
                
            }
        }
        GraphvizJava g=new GraphvizJava("mantenimiento.dot","mantenimiento.png");
        listaA.reducirTurnoD();
        listaEs.reducirTurnoR();
    }//GEN-LAST:event_empezarActionPerformed

    private void pasarTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasarTActionPerformed
        System.out.println("truno");
        miArchivo2=new File("aviones.dot");
        pasajeros=new File("pasajeros.dot");
        maletas=new File("maletas.dot");
        escritorios=new File("escritorios.dot");
        mantenimientos=new File("mantenimientos.dot");
        cola=new File("cola.dot");
        if(auxiliarAv<variaAviones){
            auxiliarAv++;
            auxTipo=generaNumAleatorio(1,3);
            if (auxTipo==1) {
                aTipo="Pequeño";
                auxPasajeros=generaNumAleatorio(5,10);
                auxDesabordaje=1;
                auxMantenimiento=generaNumAleatorio(1,3);
            }
            if (auxTipo==2) {
                aTipo="Mediano";
                auxPasajeros=generaNumAleatorio(15,25);
                auxDesabordaje=2;
                auxMantenimiento=generaNumAleatorio(2,4);
            }
            if (auxTipo==3) {
                aTipo="Grande";
                auxPasajeros=generaNumAleatorio(30,40);
                auxDesabordaje=3;
                auxMantenimiento=generaNumAleatorio(3,6);
            }
            Avion avion=new Avion(aTipo,auxPasajeros,auxDesabordaje,auxMantenimiento);
            listaA.insertarAlFinal(avion);
            
            
        
        auxiliarPa=0;
        variaMaletas=0;
        while(auxiliarPa<auxPasajeros){
            auxiliarPa++;
            auxMaletas=generaNumAleatorio(1,4);
            auxDocumentos=generaNumAleatorio(1,10);
            auxTurnoRegistro=generaNumAleatorio(1,3);
            variaMaletas=variaMaletas+auxMaletas;
            contadorMaletas[contaPaMa]=variaMaletas;
            contaPaMa++;
            Pasajero pasajero=new Pasajero(auxMaletas,auxDocumentos,auxTurnoRegistro);
            listaP.insertarAlFinal(pasajero);
        }
        auxiliarMa=0;
        while(auxiliarMa<variaMaletas){
            auxiliarMa++;
            Maleta maleta=new Maleta();
            listaE.insertarAlFrente(maleta);
        }
         
        }
//        while(iteracionesMantenimineto<variaEstaciones){
//            iteracionesMantenimineto++;
//            try {
//                listaC.removerAlFrente();
//            } catch (ExceptionListaVacia ex) {
//                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
//        if(contadorMaletas.length>sumandoMaletas) {
//            cicloMaletas=contadorMaletas[sumandoMaletas];
//            sumandoMaletas=sumandoMaletas+5;
//            System.out.println("si entra -5");
//        }  
//        eliminadorMaletas=0;
//        while(eliminadorMaletas<cicloMaletas){
//            listaE.Eliminar2();
//            eliminadorMaletas++;
//            System.out.println("se eliminan maletas");
//        }
        listaEs.agregarPasajero(listaP,Turno);
        listaEs.atender();
        if (!listaP.estaVacia()) {
            paBorra=listaP.removerAlFrente().getMaletas();
            int aux=0;
            while(aux<paBorra){
                if (!listaE.estaVacia()) {
                    listaE.Eliminar2();
                }
                aux++;
            }
        }
        if (!listaP.estaVacia()) {
            paBorra=listaP.removerAlFrente().getMaletas();
            int aux=0;
            while(aux<paBorra){
                if (!listaE.estaVacia()) {
                    listaE.Eliminar2();
                }
                aux++;
            }
        }
        if (!listaP.estaVacia()) {
            paBorra=listaP.removerAlFrente().getMaletas();
            int aux=0;
            while(aux<paBorra){
                if (!listaE.estaVacia()) {
                    listaE.Eliminar2();
                }
                aux++;
            }
        }
        if (!listaP.estaVacia()) {
            paBorra=listaP.removerAlFrente().getMaletas();
            int aux=0;
            while(aux<paBorra){
                if (!listaE.estaVacia()) {
                    listaE.Eliminar2();
                }
                aux++;
            }
        }
        if (!listaP.estaVacia()) {
            paBorra=listaP.removerAlFrente().getMaletas();
            int aux=0;
            while(aux<paBorra){
                if (!listaE.estaVacia()) {
                    listaE.Eliminar2();
                }
                aux++;
            }
        }
//        if (!listaP.estaVacia()) {
//            listaP.removerAlFrente();
//        }
//        if (!listaP.estaVacia()) {
//            listaP.removerAlFrente();
//        }
//        if (!listaP.estaVacia()) {
//            listaP.removerAlFrente();
//        }
//        if (!listaP.estaVacia()) {
//            listaP.removerAlFrente();
//        }
        
        
//         try {
//             listaM.remover();
//         } catch (ExceptionListaVacia ex) {
//             Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
//         }
         listaA.EliminarAvion(listaC);
         listaC.EliminarAviones(listaM);
         
         
        area.setText(area.getText()+"\n ++++++++++++ TURNO"+Turno+"++++++++++++ \n"+
                "++++++++++++ AVIONES ++++++++++++ \n"+
                ""+listaA.imprimir()+"++++++++++++ ESCRITORIOS ++++++++++++ \n"+listaEs.imprimir()+listaEs.imprimirColas()+
                "\n"+listaEs.imprimirPilas()+"++++++++++++ PASAJEROS ++++++++++++ \n"+""+listaP.imprimirs()
                +"++++++++++++ MALETAS   ++++++++++++ \n"+listaE.imprimir()
                +"++++++++++++ ESTACIONES ++++++++++++ \n"+listaM.imprimirr()+"COLA \n"
                +listaC.imprimirr()+"\n ++++++++++++ FIN TURNO"+Turno+"++++++++++++ \n");
        
        if (!miArchivo2.exists()) {
            try{
                miArchivo2.createNewFile();
            }catch(Exception e){
                
            }
        }
        if(miArchivo2.exists()){
            try{
            escribir2=new PrintWriter(miArchivo2,"utf-8");
            escribir2.println(listaA.imprimirG());
            escribir2.close();
            
            }catch(Exception e){
                
            }
        }
        GraphvizJava a=new GraphvizJava("aviones.dot","Aviones.png");
        if (!pasajeros.exists()) {
            try{
                pasajeros.createNewFile();
            }catch(Exception e){
                
            }
        }
        if(pasajeros.exists()){
            try{
            escribirPs=new PrintWriter(pasajeros,"utf-8");
            escribirPs.println(listaP.imprimirsG());
            escribirPs.close();
            
            }catch(Exception e){
                
            }
        }
        GraphvizJava b=new GraphvizJava("pasajeros.dot","pasajeros.png");
        if (!maletas.exists()) {
            try{
                maletas.createNewFile();
            }catch(Exception e){
                
            }
        }
        if(maletas.exists()){
            try{
            escribirMs=new PrintWriter(maletas,"utf-8");
            escribirMs.println(listaE.imprimirG());
            escribirMs.close();
            
            }catch(Exception e){
                
            }
        }
        GraphvizJava c=new GraphvizJava("maletas.dot","maletas.png");
        if (!escritorios.exists()) {
            try{
                escritorios.createNewFile();
            }catch(Exception e){
                
            }
        }
        if(escritorios.exists()){
            try{
            escribirEs=new PrintWriter(escritorios,"utf-8");
            escribirEs.println(listaEs.imprimirG());
            escribirEs.close();
            
            }catch(Exception e){
                
            }
        }
        GraphvizJava d=new GraphvizJava("escritorios.dot","escritorios.png");
        if (!mantenimientos.exists()) {
            try{
                mantenimientos.createNewFile();
            }catch(Exception e){
                
            }
        }
        if(mantenimientos.exists()){
            try{
            escribirMas=new PrintWriter(mantenimientos,"utf-8");
            escribirMas.println(listaM.imprimirrG());
            escribirMas.close();
            
            }catch(Exception e){
                
            }
        }
        GraphvizJava s=new GraphvizJava("mantenimientos.dot","mantenimientos.png");
        if (!cola.exists()) {
            try{
                cola.createNewFile();
            }catch(Exception e){
                
            }
        }
        if(cola.exists()){
            try{
            escribirC=new PrintWriter(cola,"utf-8");
            escribirC.println(listaC.imprimirrG());
            escribirC.close();
            
            }catch(Exception e){
                
            }
        }
        GraphvizJava h=new GraphvizJava("cola.dot","cola.png");
        listaA.reducirTurnoD();
        listaM.reducirTurnoM();
        listaEs.reducirTurnoR();
        listaM.EliminarAviones();
        Turno++;
    }//GEN-LAST:event_pasarTActionPerformed
    
    private static int generaNumAleatorio(int minimo,int maximo){//funcion para generar un numero aleatorio
    
        return (int)Math.floor(Math.random()*(minimo-(maximo+1))+(maximo+1));//limites del numero generado
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JTextField cantidadAviones;
    private javax.swing.JTextField cantidadEscritorios;
    private javax.swing.JTextField cantidadEstaciones;
    private javax.swing.JButton empezar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pasarT;
    // End of variables declaration//GEN-END:variables
}
